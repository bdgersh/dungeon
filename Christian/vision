	for (int i = 0; i < 60; i++) {
			for (int j = 0; j < 30; j++) {
				map[i][j].setRevealed(false);
			}
		}
		for (int i = 0; i < 10; i++)
			for (int z = player.getX() - 5; z <= player.getX() + 5; z++) { // real
				for (int x = player.getY() - 5; x <= player.getY() + 5; x++) {
					if (z >= 0 && x >= 0 && z < 60 && x < 30) {
						if (z == player.getX() && x == player.getY()) {
							map[z][x].setRevealed(true);
							map[z][x].setDepX(z);
							map[z][x].setDepY(x);

						} else {
							map[z][x].setDep(player.getX(), player.getY());
							if (!map[map[z][x].getDepX()][map[z][x].getDepY()]
									.isSolid()
									&& map[map[z][x].getDepX()][map[z][x]
											.getDepY()].isRevealed()) {
								map[z][x].setRevealed(true);
							}
						}
					}
				}
			}
		boolean lightItUp = false;
		for (int z = player.getX() - 5; z <= player.getX() + 5; z++) { // real
			for (int x = player.getY() - 5; x <= player.getY() + 5; x++) {
				if (z >= 0 && x >= 0 && z < 60 && x < 30) {
					
					lightItUp = false;
					for (int i = z - 1; i <= z + 1; i++) {
						for (int j = x - 1; j <= x + 1; j++) {
							if (j >= 0 && i >= 0 && i < 60 && j < 30) {
								if (!map[i][j].isSolid()
										&& map[i][j].isRevealed())
									lightItUp = true;
							}
						}
					}
					if (lightItUp && map[z][x].getType().equals("wall")) {
						map[z][x].setRevealed(true);
					}
					
				}
			}

		}
